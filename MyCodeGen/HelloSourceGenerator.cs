using Microsoft.CodeAnalysis;
using Microsoft.Extensions.Configuration.Ini;

namespace MyCodeGen;

[Generator]
public class HelloSourceGenerator : ISourceGenerator
{
    public void Execute(GeneratorExecutionContext context)
    {
        // Find the main method
        var mainMethod = context.Compilation.GetEntryPoint(context.CancellationToken)!;

        // Just a sample from MS Docs
        string source = $@"// <auto-generated/>
using System;

namespace {mainMethod.ContainingNamespace.ToDisplayString()}
{{
    public static partial class {mainMethod.ContainingType.Name}
    {{
        static partial void HelloFrom(string name) =>
            Console.WriteLine($""Generator says: Hi from '{{name}}'"");
    }}
}}
";
        IEnumerable<AdditionalText> myFiles = context.AdditionalFiles.Where(at => at.Path.EndsWith(".ini"));

        //the following line triggers the issue
        _ = LoadDfmSettings(myFiles.First().Path);

        var typeName = mainMethod.ContainingType.Name;

        // Add the source code to the compilation
        context.AddSource($"{typeName}.g.cs", source);
    }

    public void Initialize(GeneratorInitializationContext context)
    {
        // No initialization required for this one
    }

    private static IDictionary<string, string?> LoadDfmSettings(string path)
    {
        using FileStream file = File.OpenRead(path);
        return IniStreamConfigurationProvider.Read(file);
    }
}